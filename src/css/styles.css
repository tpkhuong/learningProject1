/*** Reset ***/
/*** background-image with text on top 

.parent-element-of-bg-img{
  min-height: 100vh or 50vh;
  overflow: hidden;
  position: relative:
  display: flex;
}

.img-bg{
  position: absolute;
  min-width: 100%;
  min-height: 100%;
  z-index: -1;
  top: 50; //reference to the parent's width
  left: 50;
  transform: translate(-50%,-50%);//reference to the current element's width.
}


***/
/*use pseudo-element for decorative element*/
:root {
  --clr-skip-link: red;
  --clr-primary: #00adee;
  --clr-secondary: #231e20;
  --clr-btn: #26ace2;
  --clr-btn-secondary: #ffffff;
  --clr-bg: #ddd;
  --clr-body: #333;
  --clr-black: #000000;
  --fw-heavy: 700;
  --fw-light: 400;
}
html {
  font-size: 62.3%;
}

body {
  /* font-family:;
    color:; */
  color: var(--clr-skip-link, lightblue);
  background: var(--clr-bg);
  line-height: 1.5;
  /*be careful using text-align on body. most elements will be a child of the body element so it will inherit the text-align.
  so inline element will be affected by text-align: ;*/
}

*,
*::before,
*::after {
  box-sizing: border-box;
}

h1,
h2,
h3,
p,
body,
figure,
figcaption,
blockquote {
  margin: 0;
}

ul[class],
li[class] {
  list-style: none;
  padding: 0;
}

img,
picture {
  max-width: 100%;
  display: block;
}

a[href] {
  text-decoration: none;
  /* background: #fff; */
}
.skip-link {
  display: inline-block;
  font-weight: var(--fw-heavy);
  color: var(--fg, teal);
  width: 10em;
  height: 3em;
  line-height: 2.6em;
  border-radius: 0.5em;
  text-decoration: none;
  text-align: center;
  background: #fff;
  /* margin: 0 auto; */
  border: 0.2em solid blue;
  /*** when we use position: absolute we want it to be contained inside its parent element. we want to add position: relative to the parent element ***/
  position: absolute;
  transform: translateY(-3.5em);
  transition: transform 0.5s ease-in;
}

.skip-link:focus {
  transform: translateY(0);
}

.voluteer-link {
  --fg: lightblue;
}

.sponsors-link {
  --fg: rgb(175, 85, 175);
}

.nonprofit-link {
  --fg: rgb(215, 175, 175);
}

.container {
  background: var(--clr-btn-secondary);
  display: flex;
  padding: 0.5em;
}

.nav {
  /*without flex-grow the nav will not match the length of its parent the header*/
  flex-grow: 1;
}

.link__list {
  background: lightblue;
  height: 100%;
  /* line-height: 4.7em; */
  margin: 0;
  display: flex;
  flex-flow: row wrap;
  gap: 1.5em;
  padding: 1em;
  align-items: center;
  text-align: center;
}

.link__list > li {
  flex-grow: 1;
  flex-shrink: 1;
  transition: all 0.8s linear;
}
.link__list > li > a {
  /* flex: 1 1 3em; */
  line-height: 2em;
  display: inline-block;
}
/*** Have to use media queries if we want to implement declarations below 

.link__list li:nth-of-type(1) {
  margin-left: auto;
}

.link__list li:nth-of-type(6) {
  margin-right: auto;
}

***/

/*.link__list > li > a,
.nav__submenu > li > a {
  font-size: 1.4rem;
  font-weight: var(--fw-heavy);
  background: lightblue;
  padding: 0 0.3em;
  /* border: 1px solid red;
  border-radius: 0.5em;
  text-decoration: none;
}*/

.link__list > li,
.nav__submenu > li,
.second-nav__submenu > li {
  font-size: 1.4rem;
  font-weight: var(--fw-heavy);
  background: lightblue;
  padding: 0 0.3em;
  /* border: 1px solid red; */
  border-radius: 0.5em;
  /* height: 2em; */
  cursor: pointer;
}

.nav__submenu > li > a {
  padding: 0;
  background: transparent;
  text-decoration: none;
}

/*.link__list > li > a:focus,
.link__list > li > a:hover {
  background: var(--clr-btn-secondary);
  two box-shaodws:
  box-shadow: 0 0 3em rgba(0,0,0,.15), 0 0 0 10px black;
  box-shadow: 0 0 1.5em 0px rgba(0, 0, 0, 0.3);
  transform: translateY(-0.5em);
}

.link__list > li > a:focus {
  outline: none;
  box-shadow: 0 0 0 3px rgba(107, 203, 255, 0.849);
}
*/
.link__list > li:focus,
.link__list > li:hover {
  /* background: var(--clr-btn-secondary); */
  box-shadow: 0 0 1.5em 0px rgba(0, 0, 0, 0.3);
  transform: translateY(-0.5em);
}

.link__list > li:focus {
  outline: none;
  box-shadow: 0 0 0 3px rgba(107, 203, 255, 0.849);
}
/*** Submenu ***/

.menu-sub {
  display: none;
  position: absolute;
}

.nav__submenu {
  /* display: none; */
  padding: 0;
}

.nav__submenu li {
  display: block;
}

.second-menu-sub {
  display: none;
}
.anchor-link:hover + .menu-sub,
.second-sub:hover .second-menu-sub,
.active {
  display: block;
  position: absolute;
  width: max-content;
  text-align: left;
  transform: translateX(-0.3em);
}
/* make it cover the whole screen on mobile.  */
.link__list--second {
  text-align: center;
  position: absolute;
  background: lightblue;
  right: 0;
  margin: 0.5em 0 0 0;
  width: 13em;
  font-weight: var(--fw-heavy);
  clip-path: circle(0% at top right);
  transition: clip-path 0.8s linear;
}

.link__list--second > li {
  border: 1px solid black;
  font-size: 1.5rem;
  padding: 0.7em;
}

.link__list--second > li:hover {
  background: var(--clr-btn-secondary);
  color: var(--clr-btn);
  cursor: pointer;
}

.link__list--second a {
  color: var(--clr-btn-secondary);
}
.link__list--second > li:hover > a {
  color: var(--clr-btn);
}
.menu-toggle {
  position: fixed;
  right: 0;
  top: 2em;
}

.hamburger,
.hamburger::before,
.hamburger::after {
  content: "";
  display: inline-block;
  width: 1.7em;
  height: 0.4em;
  background: black;
  border-radius: 0.5em;
  transition: all 0.4s linear;
}

.hamburger::before {
  /*have to make ::before element transparent */
  /* background: red; */
  /* transform: translateY(0.1em); */
}

.hamburger::after {
  transform: translateY(-0.8em);
}

.open .hamburger::before {
  opacity: 0;
}

.open .hamburger {
  transform: rotate(45deg);
}

.open .hamburger::after {
  transform: rotate(-90deg) translate(2.12em);
}

.show {
  clip-path: circle(100%);
}
